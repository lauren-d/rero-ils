#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# RERO ILS
# Copyright (C) 2019 RERO
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

DATA_PATH=$(pipenv --where)/custom_data

# Parameters description:
#  --create_items_holdings_small:
#       used for create only the items and holdings files for the 'small' documents file
#  --create_items_holdings_big:
#       used for create only the items and holdings files for the 'big' documents file
#  --deployment:
#       used for deploy the 'big' files

RED='\033[0;31m'
GREEN='\033[0;0;32m'
NC='\033[0m' # No Color

display_error_message () {
	echo -e "${RED}$1${NC}" 1>&2
}

display_success_message () {
    echo -e "${GREEN}$1${NC}" 1>&2
}

EMPTY_INSTANCE=false
DEPLOYMENT=false
CREATE_ITEMS_HOLDINGS_SMALL=false
CREATE_ITEMS_HOLDINGS_BIG=false
STOP_EXECUTION=true

# options may be followed by one colon to indicate they have a required argument
if ! options=$(getopt -o dsb -l deployment,create_items_holdings_small,create_items_holdings_big,data_path: -- "$@")
then
    # something went wrong, getopt will put out an error message for us
    exit 1
fi

while [ $# -gt 0 ]
do
    case $1 in
    -e|--empty) EMPTY_INSTANCE=true ;;
    -d|--deployment) DEPLOYMENT=true ;;
    -s|--create_items_holdings_small) CREATE_ITEMS_HOLDINGS_SMALL=true ;;
    -b|--create_items_holdings_big) CREATE_ITEMS_HOLDINGS_BIG=true ;;
    -c|--continue) STOP_EXECUTION=false ;;
    -D|--data_path) DATA_PATH=$2 ;;
    (--) shift; break;;
    (-*) display_error_message "$0: error - unrecognized option $1"; exit 1;;
    (*) break;;
    esac
    shift
done


if [ ! -d $DATA_PATH ]; then
    display_error_message "Error - data path does not exist: $DATA_PATH"
    exit 1
fi

if $CREATE_ITEMS_HOLDINGS_SMALL && $CREATE_ITEMS_HOLDINGS_BIG
then
    display_error_message "Error - chose option for 'small' or 'big' documents generation"
    exit 1
fi

if $CREATE_ITEMS_HOLDINGS_SMALL || $CREATE_ITEMS_HOLDINGS_BIG
then
    if $DEPLOYMENT
    then
        display_error_message "Error - chose deployment option only"
        exit 1
    fi
fi

if $CREATE_ITEMS_HOLDINGS_BIG
then
    # set DEPLOYMENT to true in order to use big documents file
    DEPLOYMENT=true
fi


display_success_message "Organisations:"
pipenv run invenio fixtures create --pid_type org ${DATA_PATH}/organisations.json --append
pipenv run invenio index reindex -t org --yes-i-know
display_success_message "Libraries:"
pipenv run invenio fixtures create --pid_type lib ${DATA_PATH}/libraries.json --append
pipenv run invenio index reindex -t lib --yes-i-know
display_success_message "Locations:"
pipenv run invenio fixtures create --pid_type loc ${DATA_PATH}/locations.json --append
pipenv run invenio index reindex -t loc --yes-i-know
display_success_message "Item types:"
pipenv run invenio fixtures create --pid_type itty ${DATA_PATH}/item_types.json --append
pipenv run invenio index reindex -t itty --yes-i-know
display_success_message "Patron types:"
pipenv run invenio fixtures create --pid_type ptty ${DATA_PATH}/patron_types.json --append
pipenv run invenio index reindex -t ptty --yes-i-know
display_success_message "Circulation policies:"
pipenv run invenio fixtures create --pid_type cipo ${DATA_PATH}/circulation_policies.json --append
pipenv run invenio index reindex -t cipo --yes-i-know
pipenv run invenio index run --raise-on-error

pipenv run invenio fixtures import_users ${DATA_PATH}/users.json -v